/*
 * GSES2 BTC application
 *
 *  Тобі потрібно реалізувати сервіс з АРІ, який дозволить:  - дізнатись поточний курс біткоіну (BTC) у гривні (UAH) - підписати емейл на отримання інформації по зміні курсу - запит, який відправить всім підписаним користувачам актуальний курс.   Додаткові вимоги: 1. Сервіс має відповідати описаному ниже АРІ. <i>NB Закривати рішення аутентифікацією не потрібно</i>.  2. Всі данні, для роботи додатку повинні зберігатися в файлах (підключати базу данних не потрібно). Тобто, потрібно реалізувати збереження та роботу з даними (наприклад, електронними адресами) через файлову систему. 3. В репозиторії повинен бути Dockerfile, який дозволяє запустити систему в Docker. З матеріалом по Docker вам необхідно ознайомитись самостійно. 4. Також ти можеш додавати коментарі чи опис логіки виконання роботи в README.md документі. Правильна логіка може стати перевагою при оцінюванні, якщо ти не повністю виконаєш завдання.  Очікувані мови виконання завдання: PHP, Go, JavaScript (Node.js).  Виконувати завдання іншими мовами можна, проте, це не буде перевагою. Виконане завдання необхідно завантажити на GitHub (публічний репозиторій) та сабмітнути виконане завдання в гугл-форму.  Ти можеш користуватися усією доступною інформацією, але виконуй завдання самостійно.  Успіхів!
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swg

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/api/",
		Index,
	},

	Route{
		"Rate",
		strings.ToUpper("Get"),
		"/api/rate",
		Rate,
	},

	Route{
		"SendEmails",
		strings.ToUpper("Post"),
		"/api/sendEmails",
		SendEmails,
	},

	Route{
		"Subscribe",
		strings.ToUpper("Post"),
		"/api/subscribe",
		Subscribe,
	},
}
